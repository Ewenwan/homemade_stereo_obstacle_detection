<!-- -->
<launch>
<!-- Arguments -->
  <!-- Camera params (config). -->
  <!--arg name="params_camera" default="$(find stereo_obstacle_detection)/params/camera_stereo/logitech_c525.yaml"/-->
  <!-- Disparity image params. -->
  <arg name="params_disparity" default="$(find stereo_obstacle_detection)/params/camera_stereo/disparity.yaml"/>
  <!-- Camera name. -->
  <arg name="camera" default="/stereo"/>
  <!-- View camera stream. -->
  <arg name="view" default="false"/>
  <!-- Rviz (3D Point Cloud). -->
  <arg name="rviz" default="true"/>
  <!-- Config camera stream. -->
  <arg name="config_camera" default="false"/>
  <!-- Config disparity image. -->
  <arg name="config_disparity" default="false"/>
  <!-- Save camera stream. -->
  <arg name="save" default="false"/>
  <!-- Calibrate. -->
  <arg name="calibrate" default="false"/>
  <!-- Check calibration. -->
  <arg name="check" default="false"/>
  <!-- Pose calibration. -->
  <arg name="calibrate_pose" default="true"/>
  <!-- Frame tf publisher (static_tf_publisher). -->
  <arg name="tf" default="true"/>
  <!-- Visual Odometry. -->
  <arg name="odometry" default="false"/>
  <!-- Rviz display config. -->
  <arg name="stereo_proc" default="true"/>
  <arg name="obstacle_detection" default="true"/>

  <arg if="$(arg odometry)" name="rviz_config" default="$(find stereo_obstacle_detection)/params/camera_stereo/rviz_odometry.vcg"/>
  <arg unless="$(arg odometry)" name="rviz_config" default="$(find stereo_obstacle_detection)/params/camera_stereo/stereo.rviz"/>
<group ns="stereo">
  <!-- Run driver. -->
  <node name="left" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video1" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="left" />
    <param name="camera_name" value="left"/>
    <param name="io_method" value="mmap"/>
    <param name="framerate" value="20"/>
    <!--param name="autofocus" value="false"/-->
  </node>

 <node name="right" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="video_device" value="/dev/video2" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="right" />
    <param name="camera_name" value="right"/>
    <param name="io_method" value="mmap"/>
    <param name="framerate" value="20"/>
    <!--param name="autofocus" value="false"/-->
  </node>
  <!-- Camera image processing (color, rect). -->
 <group if="$(arg stereo_proc)">
 <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" output="screen">
	<param name="approximate_sync" value="true"/>
	<param name="queue_size" value="20"/>
 	<rosparam file="$(arg params_disparity)"/>
 </node>
 </group>

</group>


  <node pkg="rqt_graph" type="rqt_graph" name="rqt_graph"/>

  <group if="$(arg view)">
    <node name="view" pkg="image_view" type="stereo_view">
      <remap from="stereo" to="$(arg camera)"/>
      <remap from="image" to="/image_rect"/>
      <param name="approximate_sync" value="true"/>
      <param name="queue_size" value="200"/>
      <param name="autosize" value="false"/>
    </node>
  </group>

  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rviz_config)"/>
  </group>

  <group if="$(arg config_camera)">
      <node name="config_stereo" pkg="dynamic_reconfigure" type="reconfigure_gui" args="$(arg camera)"/>
  </group>

  <group if="$(arg config_disparity)">
      <node name="config_stereo_image_proc" pkg="rqt_reconfigure" type="rqt_reconfigure" args="stereo_image_proc_detect"/>
  </group>

  <group if="$(arg save)">
      <node name="record" pkg="rosbag" type="record" args="$(arg camera)/left/image_raw $(arg camera)/right/image_raw"/>
  </group>

  <group if="$(arg calibrate)">
    <!-- Calibration tool, for a calibration (chessboard) pattern of 8x6 inner squares of 3cm -->
  <!--node  ns="$(arg camera)" pkg="camera_calibration" type="cameracalibrator.py" name="cameracalibrator_stereo" args="-pattern 'chessboard' size 8x6 -square 0.0245 -approximate=0.02" output="screen"-->
  <node  ns="$(arg camera)" pkg="camera_calibration" type="cameracalibrator.py" name="cameracalibrator_stereo" args="--pattern 'chessboard' --size 8x6 --square 0.061 --approximate=0.03 --no-service-check" output="screen">
  <!--node  ns="$(arg camera)" pkg="camera_calibration" type="cameracalibrator.py" name="cameracalibrator_stereo" args="-pattern 'circles' -size 7x7 -square 0.062 -approximate=0.03" output="screen"-->
    <remap from="left" to="left/image_raw"/>
    <remap from="right" to="right/image_raw"/>
    <remap from="left_camera" to="left"/>
    <remap from="right_camera" to="right"/>
  </node>
  </group>

  <group if="$(arg check)">
    <node name="camera_check"
          pkg="camera_calibration" type="cameracheck.py"
          args="--size 8x6 --square 0.0245 " output="screen">
      <remap from="stereo" to="$(arg camera)"/>
    </node>
  </group>

  <!--group if="$(arg calibrate_pose)">
      <include file="$(find camera_pose_calibration)/blocks/calibration_tf_publisher.launch">
        <arg name="cache_file" value="/tmp/camera_pose_calibration_cache.bag"/>
      </include>
  </group-->

  <group if="$(arg tf)">
    <include file="$(find stereo_obstacle_detection)/launch/frames/stereo_frames.launch"/>
  </group>

  <group if="$(arg odometry)">
    <include file="$(find stereo_obstacle_detection)/launch/visual_odometry/viso2_stereo_odometer.launch">
      <remap from="stereo" to="$(arg camera)"/>
      <remap from="image" to="image_rect"/>
    </include>
  </group>

  <group if ="$(arg obstacle_detection)">
    <node name="stereo_obstacle_detection" pkg="stereo_obstacle_detection" type="stereo_obstacle_detection">
    </node>
  </group>
</launch>
